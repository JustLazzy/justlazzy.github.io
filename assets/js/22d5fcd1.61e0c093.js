"use strict";(self.webpackChunkjustlazzy_github_io=self.webpackChunkjustlazzy_github_io||[]).push([[944],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,y=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(y,o(o({ref:t},c),{},{components:n})):a.createElement(y,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8686:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=n(6600),r=(n(9496),n(9613));const i={title:"QB Spawn setting"},o=void 0,l={unversionedId:"paid-scripts/lazy-motel/installation/qbcore/qb-spawn",id:"paid-scripts/lazy-motel/installation/qbcore/qb-spawn",title:"QB Spawn setting",description:'Find if type == "current"and follow the method below',source:"@site/docs/paid-scripts/lazy-motel/installation/qbcore/qb-spawn.md",sourceDirName:"paid-scripts/lazy-motel/installation/qbcore",slug:"/paid-scripts/lazy-motel/installation/qbcore/qb-spawn",permalink:"/docs/paid-scripts/lazy-motel/installation/qbcore/qb-spawn",draft:!1,tags:[],version:"current",frontMatter:{title:"QB Spawn setting"},sidebar:"tutorialSidebar",previous:{title:"Setting up inventory",permalink:"/docs/paid-scripts/lazy-motel/installation/qbcore/inventory"},next:{title:"\ud83e\udee6 Adding New Motel",permalink:"/docs/paid-scripts/lazy-motel/adding-new-motel/"}},p={},s=[],c={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"-- Search this\nRegisterNUICallback('spawnplayer', function(data, cb)\n")),(0,r.kt)("p",null,"Find ",(0,r.kt)("inlineCode",{parentName:"p"},'if type == "current"'),"and follow the method below"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"if type == \"current\" then\n        PreSpawnPlayer()\n        QBCore.Functions.GetPlayerData(function(pd)\n            ped = PlayerPedId()\n            SetEntityCoords(ped, pd.position.x, pd.position.y, pd.position.z)\n            SetEntityHeading(ped, pd.position.a)\n            FreezeEntityPosition(ped, false)\n        end)\n        if insideMeta.house ~= nil then\n            local houseId = insideMeta.house\n            TriggerEvent('qb-houses:client:LastLocationHouse', houseId)\n        elseif insideMeta.apartment.apartmentType ~= nil or insideMeta.apartment.apartmentId ~= nil then\n            local apartmentType = insideMeta.apartment.apartmentType\n            local apartmentId = insideMeta.apartment.apartmentId\n            TriggerEvent('qb-apartments:client:LastLocationHouse', apartmentType, apartmentId)\n        end\n        TriggerServerEvent('QBCore:Server:OnPlayerLoaded')\n        TriggerEvent('QBCore:Client:OnPlayerLoaded')\n        PostSpawnPlayer()\n")),(0,r.kt)("p",null,"Replace with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-lua"},"if type == \"current\" then\n        PreSpawnPlayer()\n        QBCore.Functions.GetPlayerData(function(pd)\n            ped = PlayerPedId()\n            SetEntityCoords(ped, pd.position.x, pd.position.y, pd.position.z)\n            SetEntityHeading(ped, pd.position.a)\n            FreezeEntityPosition(ped, false)\n        end)\n        if insideMeta.house ~= nil then\n            local houseId = insideMeta.house\n            TriggerEvent('qb-houses:client:LastLocationHouse', houseId)\n        elseif insideMeta.apartment.apartmentType ~= nil or insideMeta.apartment.apartmentId ~= nil then\n            local apartmentType = insideMeta.apartment.apartmentType\n            local apartmentId = insideMeta.apartment.apartmentId\n            TriggerEvent('qb-apartments:client:LastLocationHouse', apartmentType, apartmentId)\n        elseif insideMeta.motel ~= nil and insideMeta.motel.motel ~= nil and insideMeta.motel.room ~= nil then\n            local motel = insideMeta.motel.motel\n            local room = insideMeta.motel.room\n            TriggerEvent('jl-motel:client:spawnLastLocation', motel, room)\n        end\n        TriggerServerEvent('QBCore:Server:OnPlayerLoaded')\n        TriggerEvent('QBCore:Client:OnPlayerLoaded')\n        PostSpawnPlayer()\n")))}d.isMDXComponent=!0}}]);